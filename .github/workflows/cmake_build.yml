name: CMake

on:
  push: {}
  pull_request: {}

env:
  BUILD_TYPE: Release

jobs:
  macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        brew install llvm mpv

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_OSX_ARCHITECTURES="x86_64"

    - name: Build OFS
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build . --config $BUILD_TYPE --target "OpenFunscripter"


    - name: Create App Archive
      working-directory: ${{github.workspace}}/bin
      run: |
        zip -r OpenFunscripter-macOS.zip OpenFunscripter.app

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        generateReleaseNotes: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "${{github.workspace}}/bin/OpenFunscripter-macOS.zip"




    # - uses: actions/upload-artifact@v4
    #   with:
    #     name: OFS-MacOS-x64_${{github.sha}}.zip
    #     path: ${{runner.workspace}}\OFS\bin\*
    #     retention-days: 14
  # linux:
  #   runs-on: ubuntu-20.04

  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: 'recursive'
  #       fetch-depth: 0

  #   - name: Install Dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y build-essential libmpv-dev libglvnd-dev

  #   - name: Create Build Environment
  #     run: cmake -E make_directory ${{runner.workspace}}/build

  #   - name: Configure CMake
  #     shell: bash
  #     working-directory: ${{runner.workspace}}/build
  #     run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

  #   - name: Build OFS
  #     working-directory: ${{runner.workspace}}/build
  #     shell: bash
  #     run: |
  #       cmake --build . --config $BUILD_TYPE --target "OpenFunscripter"


  # windows:
  #   runs-on: windows-2019

  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: 'recursive'
  #       fetch-depth: 0

  #   #- name: Git LFS
  #   #  run: git lfs pull

  #   - name: Create Build Environment
  #     run: cmake -E make_directory ${{runner.workspace}}/build

  #   - name: Configure CMake
  #     shell: bash
  #     working-directory: ${{runner.workspace}}/build
  #     run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019" -A x64

  #   - name: Build OFS
  #     working-directory: ${{runner.workspace}}/build
  #     shell: bash
  #     run: |
  #       cmake --build . --config $BUILD_TYPE --target "OpenFunscripter"

    #- name: FFMPEG & Zip
    #  run: |
    #    choco install -y -r --no-progress 7zip
    #    powershell Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-git-essentials.7z" -OutFile "${{runner.workspace}}\ffmpeg.7z"
    #    mkdir "${{runner.workspace}}\ffmpeg"
    #    7z e "${{runner.workspace}}\ffmpeg.7z" -o${{runner.workspace}}\ffmpeg
    #    cp "${{runner.workspace}}\ffmpeg\ffmpeg.exe" "${{runner.workspace}}\OFS\bin\Release\ffmpeg.exe"

    # - uses: actions/upload-artifact@v4
    #   with:
    #     name: OFS-64x_${{github.sha}}.zip
    #     path: ${{runner.workspace}}\OFS\bin\Release\*
    #     retention-days: 14
