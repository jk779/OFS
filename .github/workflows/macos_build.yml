name: macos_build

on:
  workflow_dispatch: {}

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4.1.1
      with:
        submodules: 'true'
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget -O MacPorts.pkg https://github.com/macports/macports-base/releases/download/v2.10.5/MacPorts-2.10.5-15-Sequoia.pkg
        sudo installer -pkg MacPorts.pkg -target /
        brew install llvm
        /opt/local/bin/port version
        sudo /opt/local/bin/port install mpv +audiocd+libarchive+network+opengl+osd+libmpv
        sudo /opt/local/bin/port contents mpv

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        # cmake --build . --config $BUILD_TYPE --target "OpenFunscripter"
        mkdir build
        cd build
        cmake ..
        cpack --verbose --debug -D CPACK_PACKAGE_NAME=OpenFunscripter -G DragNDrop
        cd ..
        pwd
        cd ..
        find "./OpenFunscripter/bin/"

    - uses: actions/upload-artifact@v4
      with:
        name: build
        path: ${{ github.workspace }}/bin
        if-no-files-found: error